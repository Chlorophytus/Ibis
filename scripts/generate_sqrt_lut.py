#!/usr/bin/env python3
# Copyright 2025 Roland Metivier
#
# SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
#
# Licensed under the Solderpad Hardware License v 2.1 (the "License"); you may 
# not use this file except in compliance with the License, or, at your option, 
# the Apache License version 2.0.
#
# You may obtain a copy of the License at
#
# https://solderpad.org/licenses/SHL-2.1/
#
# Unless required by applicable law or agreed to in writing, any work distributed 
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
# CONDITIONS OF ANY KIND, either express or implied.
#
# See the License for the specific language governing permissions and limitations 
# under the License.
import math

if __name__ == "__main__":
    print(
        """/**
 *  Copyright 2025 Roland Metivier
 *
 *  SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
 *
 *  Licensed under the Solderpad Hardware License v 2.1 (the "License"); you may
 *  not use this file except in compliance with the License, or, at your option,
 *  the Apache License version 2.0.
 *
 *  You may obtain a copy of the License at
 *
 *  https://solderpad.org/licenses/SHL-2.1/
 *
 *  Unless required by applicable law or agreed to in writing, any work
 *  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 *  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
`timescale 1ns / 1ps
`default_nettype none
// AUTOGENERATED: 8-bit square root
module ibis_square_root
 (input wire logic unsigned [7:0] in_bits,
  output logic unsigned [7:0] square_root);
  always_comb begin: ibis_square_root_combinatorial
    unique case(in_bits) inside"""
    )
    for i in range(256):
        sqrted: float = math.sqrt(i)
        print(f"      8'h{i:02X}: square_root = 8'h{int(sqrted * 16):02X}; // {sqrted}")
    print(
        """      default: ;
    endcase
  end: ibis_square_root_combinatorial
endmodule: ibis_square_root"""
    )
